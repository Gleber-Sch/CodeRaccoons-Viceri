/*
Deployment script for ClinicaDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ClinicaDB"
:setvar DefaultFilePrefix "ClinicaDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Atendimento]...';


GO
CREATE TABLE [dbo].[Atendimento] (
    [Id]        INT IDENTITY (1, 1) NOT NULL,
    [IdClinica] INT NOT NULL,
    [IdMedico]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Clinica]...';


GO
CREATE TABLE [dbo].[Clinica] (
    [Id]              INT          IDENTITY (1, 1) NOT NULL,
    [Email]           VARCHAR (50) NOT NULL,
    [Senha]           VARCHAR (20) NOT NULL,
    [Cnpj]            VARCHAR (14) NOT NULL,
    [StatusAtividade] BIT          NOT NULL,
    [TelefoneCom]     VARCHAR (10) NOT NULL,
    [Nome]            VARCHAR (50) NOT NULL,
    [IdEndereco]      INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Cnpj] ASC),
    UNIQUE NONCLUSTERED ([Email] ASC)
);


GO
PRINT N'Creating [dbo].[Consulta]...';


GO
CREATE TABLE [dbo].[Consulta] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [Historico]     VARCHAR (300) NOT NULL,
    [Nota]          TINYINT       NOT NULL,
    [DataHora]      DATETIME      NOT NULL,
    [IdPaciente]    INT           NOT NULL,
    [IdAtendimento] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Endereco]...';


GO
CREATE TABLE [dbo].[Endereco] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [Estado]      VARCHAR (2)  NOT NULL,
    [Cidade]      VARCHAR (50) NOT NULL,
    [Bairro]      VARCHAR (50) NOT NULL,
    [Logradouro]  VARCHAR (50) NOT NULL,
    [Numero]      INT          NOT NULL,
    [Complemento] VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Especialidade]...';


GO
CREATE TABLE [dbo].[Especialidade] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Nome] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Nome] ASC)
);


GO
PRINT N'Creating [dbo].[Exame]...';


GO
CREATE TABLE [dbo].[Exame] (
    [Id]            INT      IDENTITY (1, 1) NOT NULL,
    [DataHora]      DATETIME NOT NULL,
    [IdAtendimento] INT      NOT NULL,
    [IdConsulta]    INT      NOT NULL,
    [IdTipoExame]   INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[HorariosConsulta]...';


GO
CREATE TABLE [dbo].[HorariosConsulta] (
    [Id]            INT      IDENTITY (1, 1) NOT NULL,
    [Dia]           DATE     NOT NULL,
    [Hora]          TIME (7) NOT NULL,
    [Valor]         MONEY    NOT NULL,
    [IdAtendimento] INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[HorariosExame]...';


GO
CREATE TABLE [dbo].[HorariosExame] (
    [Id]        INT      IDENTITY (1, 1) NOT NULL,
    [IdClinica] INT      NOT NULL,
    [Data]      DATE     NOT NULL,
    [Hora]      TIME (7) NOT NULL,
    [Valor]     MONEY    NOT NULL
);


GO
PRINT N'Creating [dbo].[Medico]...';


GO
CREATE TABLE [dbo].[Medico] (
    [Id]              INT          IDENTITY (1, 1) NOT NULL,
    [Nome]            VARCHAR (50) NOT NULL,
    [Cpf]             VARCHAR (11) NOT NULL,
    [Crm]             INT          NOT NULL,
    [CrmEstado]       VARCHAR (2)  NOT NULL,
    [Email]           VARCHAR (50) NOT NULL,
    [Senha]           VARCHAR (20) NOT NULL,
    [DataNasc]        DATE         NOT NULL,
    [StatusAtividade] BIT          NOT NULL,
    [Genero]          CHAR (1)     NOT NULL,
    [Celular]         VARCHAR (11) NOT NULL,
    [IdEspecialidade] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Cpf] ASC),
    UNIQUE NONCLUSTERED ([Crm] ASC),
    UNIQUE NONCLUSTERED ([Email] ASC)
);


GO
PRINT N'Creating [dbo].[Paciente]...';


GO
CREATE TABLE [dbo].[Paciente] (
    [Id]          INT          IDENTITY (1, 1) NOT NULL,
    [Nome]        VARCHAR (50) NOT NULL,
    [Cpf]         VARCHAR (11) NOT NULL,
    [Email]       VARCHAR (50) NOT NULL,
    [Senha]       VARCHAR (20) NOT NULL,
    [DataNasc]    DATE         NOT NULL,
    [Genero]      CHAR (1)     NOT NULL,
    [Celular]     VARCHAR (11) NOT NULL,
    [TelefoneRes] VARCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Cpf] ASC),
    UNIQUE NONCLUSTERED ([Email] ASC)
);


GO
PRINT N'Creating [dbo].[TipoExame]...';


GO
CREATE TABLE [dbo].[TipoExame] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Nome] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Nome] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Atendimento_Clinica]...';


GO
ALTER TABLE [dbo].[Atendimento] WITH NOCHECK
    ADD CONSTRAINT [FK_Atendimento_Clinica] FOREIGN KEY ([IdClinica]) REFERENCES [dbo].[Clinica] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Atendimento_Medico]...';


GO
ALTER TABLE [dbo].[Atendimento] WITH NOCHECK
    ADD CONSTRAINT [FK_Atendimento_Medico] FOREIGN KEY ([IdMedico]) REFERENCES [dbo].[Medico] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Clinica_Endereco]...';


GO
ALTER TABLE [dbo].[Clinica] WITH NOCHECK
    ADD CONSTRAINT [FK_Clinica_Endereco] FOREIGN KEY ([IdEndereco]) REFERENCES [dbo].[Endereco] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Consulta_Paciente]...';


GO
ALTER TABLE [dbo].[Consulta] WITH NOCHECK
    ADD CONSTRAINT [FK_Consulta_Paciente] FOREIGN KEY ([IdPaciente]) REFERENCES [dbo].[Paciente] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Consulta_Atendimento]...';


GO
ALTER TABLE [dbo].[Consulta] WITH NOCHECK
    ADD CONSTRAINT [FK_Consulta_Atendimento] FOREIGN KEY ([IdAtendimento]) REFERENCES [dbo].[Atendimento] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Exame_TipoExame]...';


GO
ALTER TABLE [dbo].[Exame] WITH NOCHECK
    ADD CONSTRAINT [FK_Exame_TipoExame] FOREIGN KEY ([IdTipoExame]) REFERENCES [dbo].[TipoExame] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Exame_Atendimento]...';


GO
ALTER TABLE [dbo].[Exame] WITH NOCHECK
    ADD CONSTRAINT [FK_Exame_Atendimento] FOREIGN KEY ([IdAtendimento]) REFERENCES [dbo].[Atendimento] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Exame_Consulta]...';


GO
ALTER TABLE [dbo].[Exame] WITH NOCHECK
    ADD CONSTRAINT [FK_Exame_Consulta] FOREIGN KEY ([IdConsulta]) REFERENCES [dbo].[Consulta] ([Id]);


GO
PRINT N'Creating [dbo].[FK_HorariosConsulta_Atendimento]...';


GO
ALTER TABLE [dbo].[HorariosConsulta] WITH NOCHECK
    ADD CONSTRAINT [FK_HorariosConsulta_Atendimento] FOREIGN KEY ([IdAtendimento]) REFERENCES [dbo].[Atendimento] ([Id]);


GO
PRINT N'Creating [dbo].[FK_HorariosExame]...';


GO
ALTER TABLE [dbo].[HorariosExame] WITH NOCHECK
    ADD CONSTRAINT [FK_HorariosExame] FOREIGN KEY ([IdClinica]) REFERENCES [dbo].[Clinica] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Medico_Especialidade]...';


GO
ALTER TABLE [dbo].[Medico] WITH NOCHECK
    ADD CONSTRAINT [FK_Medico_Especialidade] FOREIGN KEY ([IdEspecialidade]) REFERENCES [dbo].[Especialidade] ([Id]);


GO
PRINT N'Creating [dbo].[ViewAtendimentos]...';


GO
CREATE VIEW ViewAtendimentos as
select  Atendimento.Id,Medico.Nome as medico, Clinica.Nome as Clinica
From Atendimento
inner Join Medico on Atendimento.IdMedico=Medico.Id
inner join Clinica on Atendimento.IdClinica=Clinica.Id
GO
PRINT N'Creating [dbo].[ViewClinicas]...';


GO
create view ViewClinicas as
select Clinica.Id, Clinica.Email, Clinica.Cnpj, Clinica.StatusAtividade,
Clinica.Nome, endereco.Estado, Endereco.Cidade, Endereco.Logradouro,
Endereco.Numero, Endereco.Complemento
from Clinica
inner join endereco on Clinica.IdEndereco = endereco.Id
GO
PRINT N'Creating [dbo].[ViewConsulta]...';


GO
/* Cria uma view para exibição das consultas,
permitindo selecionar elemetos pelo Id da Consulta, 
Id do Paciente e Id do Médico */

CREATE VIEW ViewConsulta AS
SELECT C.Id, P.Id AS IdPaciente, P.Nome AS Paciente,
M.Id AS IdMedico, M.Nome AS Medico,C.DataHora, C.Historico,
Cl.Id AS IdClinica, Cl.Nome AS Clinica, C.Nota
FROM [Consulta] C
JOIN [Atendimento] A ON C.IdAtendimento = A.Id
JOIN [Medico] M ON A.IdMedico = M.Id
JOIN [Paciente] P ON C.IdPaciente = P.Id
JOIN [Clinica] Cl ON A.IdClinica = Cl.Id
GO
PRINT N'Creating [dbo].[ViewEnderecos]...';


GO
create view ViewEnderecos as
select Endereco.Id, Clinica.Nome, Endereco.estado,
Endereco.Cidade, Endereco.Bairro, Endereco.Logradouro,
Endereco.Numero, Endereco.Complemento
FROM Endereco
INNER JOIN Clinica on Endereco.Id = Clinica.IdEndereco
GO
PRINT N'Creating [dbo].[ViewExame]...';


GO
/* Cria uma view para exibição dos Exames,
permitindo selecionar elemetos pelo Id do Exame, 
Id do Paciente, Id do Médico que solicitou o exame,
Id do médico que realizou o exame e Id da Clinica onde
o exame foi realizado*/

CREATE VIEW ViewExame AS
SELECT E.Id, TE.Nome AS TipoDoExame, P.Id AS IdPaciente,
P.Nome AS NomeDoPaciente, MedQueSolicitou.Id AS IdMedicoQueSolicitou,
MedQueSolicitou.Nome AS SolicitadoPeloMedico,
Co.DataHora AS DataHora_ExameSolicitado,
E.DataHora AS DataHora_ExameRealizado,
MedQueRealizou.Id AS IdMedicoQueRealizou, MedQueRealizou.Nome AS RealizadoPeloMedico,
Cl.Id AS IdClinica, Cl.Nome AS RealizadoNaClinica
FROM [Exame] E
JOIN [Atendimento] AtRealizado ON E.IdAtendimento = AtRealizado.Id
JOIN [Medico] MedQueRealizou ON AtRealizado.IdMedico = MedQueRealizou.Id
JOIN [TipoExame] TE ON E.IdTipoExame = TE.Id
JOIN [Clinica] Cl ON AtRealizado.IdClinica = Cl.Id
JOIN [Consulta] Co ON E.IdConsulta = Co.Id
JOIN [Paciente] P ON Co.IdPaciente = P.Id
JOIN [Atendimento] AtSolicitado ON Co.IdAtendimento = AtSolicitado.Id
JOIN [Medico] MedQueSolicitou ON AtSolicitado.IdMedico = MedQueSolicitou.Id
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Atendimento] WITH CHECK CHECK CONSTRAINT [FK_Atendimento_Clinica];

ALTER TABLE [dbo].[Atendimento] WITH CHECK CHECK CONSTRAINT [FK_Atendimento_Medico];

ALTER TABLE [dbo].[Clinica] WITH CHECK CHECK CONSTRAINT [FK_Clinica_Endereco];

ALTER TABLE [dbo].[Consulta] WITH CHECK CHECK CONSTRAINT [FK_Consulta_Paciente];

ALTER TABLE [dbo].[Consulta] WITH CHECK CHECK CONSTRAINT [FK_Consulta_Atendimento];

ALTER TABLE [dbo].[Exame] WITH CHECK CHECK CONSTRAINT [FK_Exame_TipoExame];

ALTER TABLE [dbo].[Exame] WITH CHECK CHECK CONSTRAINT [FK_Exame_Atendimento];

ALTER TABLE [dbo].[Exame] WITH CHECK CHECK CONSTRAINT [FK_Exame_Consulta];

ALTER TABLE [dbo].[HorariosConsulta] WITH CHECK CHECK CONSTRAINT [FK_HorariosConsulta_Atendimento];

ALTER TABLE [dbo].[HorariosExame] WITH CHECK CHECK CONSTRAINT [FK_HorariosExame];

ALTER TABLE [dbo].[Medico] WITH CHECK CHECK CONSTRAINT [FK_Medico_Especialidade];


GO
PRINT N'Update complete.';


GO
